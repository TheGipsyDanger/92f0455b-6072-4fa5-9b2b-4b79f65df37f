diff --git a/node_modules/react-native-swipeable/lib/index.js b/node_modules/react-native-swipeable/lib/index.js
index 57996ad..e1a3032 100644
--- a/node_modules/react-native-swipeable/lib/index.js
+++ b/node_modules/react-native-swipeable/lib/index.js
@@ -16,6 +16,8 @@ var _reactNative = require('react-native');
 
 var _propTypes = require('prop-types');
 
+var _deprecatedPropTypes = require('deprecated-react-native-prop-types');
+
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
 function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
@@ -78,7 +80,7 @@ var Swipeable = function (_PureComponent) {
     }, _this._unmounted = false, _this._handlePan = _reactNative.Animated.event([null, {
       dx: _this.state.pan.x,
       dy: _this.state.pan.y
-    }]), _this._handleMoveShouldSetPanResponder = function (event, gestureState) {
+    }], {useNativeDriver: true}), _this._handleMoveShouldSetPanResponder = function (event, gestureState) {
       return Math.abs(gestureState.dx) > _this.props.swipeStartMinDistance;
     }, _this._handlePanResponderStart = function (event, gestureState) {
       var _this$state = _this.state,
@@ -294,7 +296,7 @@ var Swipeable = function (_PureComponent) {
   }
 
   _createClass(Swipeable, [{
-    key: 'componentWillMount',
+    key: 'UNSAFE_componentWillMount',
     value: function componentWillMount() {
       var _props = this.props,
           onPanAnimatedValueRef = _props.onPanAnimatedValueRef,
@@ -603,12 +605,12 @@ Swipeable.propTypes = {
   swipeStartMinDistance: _propTypes.PropTypes.number,
 
   // styles
-  style: _reactNative.ViewPropTypes.style,
-  leftContainerStyle: _reactNative.ViewPropTypes.style,
-  leftButtonContainerStyle: _reactNative.ViewPropTypes.style,
-  rightContainerStyle: _reactNative.ViewPropTypes.style,
-  rightButtonContainerStyle: _reactNative.ViewPropTypes.style,
-  contentContainerStyle: _reactNative.ViewPropTypes.style
+  style: _deprecatedPropTypes.ViewPropTypes.style,
+  leftContainerStyle: _deprecatedPropTypes.ViewPropTypes.style,
+  leftButtonContainerStyle: _deprecatedPropTypes.ViewPropTypes.style,
+  rightContainerStyle: _deprecatedPropTypes.ViewPropTypes.style,
+  rightButtonContainerStyle: _deprecatedPropTypes.ViewPropTypes.style,
+  contentContainerStyle: _deprecatedPropTypes.ViewPropTypes.style
 };
 Swipeable.defaultProps = {
   leftContent: null,
@@ -671,6 +673,7 @@ Swipeable.defaultProps = {
   swipeReleaseAnimationConfig: {
     toValue: { x: 0, y: 0 },
     duration: 250,
+    useNativeDriver: true,
     easing: _reactNative.Easing.elastic(0.5)
   },
 
